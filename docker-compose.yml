services:
  autentificacion-ms:
    depends_on:
      - auth-db
    build:
      context: ./autentificacion
      dockerfile: dockerfile
    ports:
      - "8082:8082"
    environment:
      - DB_HOST_AUTENTIFICACION=${DB_HOST_AUTENTIFICACION}
      - DB_AUTENTIFICACION=${DB_AUTENTIFICACION}
      - SERVICE_AUTH=${SERVICE_AUTH}
      - JWT_SECRET=${JWT_SECRET}
      - EUREKA_URL=${EUREKA_URL}
    networks:
      - gaaf-net

  inventario-ms:
    depends_on:
      - gaaf-db
    build:
      context: ./inventario-entrada
      dockerfile: dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST_INVENTARIO=${DB_HOST_INVENTARIO}
      - DB_INVENTARIO=${DB_INVENTARIO}
      - SERVICE_INVENTARIO=${SERVICE_INVENTARIO}
      - EUREKA_URL=${EUREKA_URL}
    networks:
      - gaaf-net

  gateway-ms:
    build:
      context: ./gateway
      dockerfile: dockerfile
    ports:
      - "8080:8080"
    environment:
      - SERVICE_INVENTARIO=${SERVICE_INVENTARIO}
      - SERVICE_AUTH=${SERVICE_AUTH}
      - JWT_SECRET=${JWT_SECRET}
      - EUREKA_URL=${EUREKA_URL}
    networks:
      - gaaf-net

  eureka-ms:
    build:
      context: ./eureka
      dockerfile: dockerfile
    ports:
      - "8761:8761"
    networks:
      - gaaf-net

  gaaf-db:
    image: mysql:8.4
    container_name: gaaf_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: gaaf
      MYSQL_DATABASE: db_gaaf
    ports:
      - "3306:3306"
    volumes:
      - gaaf_db:/var/lib/mysql
    networks:
      - gaaf-net

  auth-db:
    image: mongo
    container_name: auth-db
    restart: always
    command: ["--replSet", "rs0"]
    ports:
      - "27017:27017"
    volumes:
      - gaaf_auth_db:/data/db
    networks:
      - gaaf-net

volumes:
  gaaf_db:
  gaaf_auth_db:

networks:
  gaaf-net:
    driver: bridge
